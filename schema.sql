-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2022-08-14 09:39:47 CEST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE SEQUENCE coupons_id_seq START WITH 1 INCREMENT BY 1 MAXVALUE 100000 MINVALUE 1 CYCLE CACHE 20 ORDER;

CREATE SEQUENCE games_id_seq START WITH 10 INCREMENT BY 10 MINVALUE 10 NOCACHE ORDER;

CREATE TABLE coupons (
    coupon_id   NUMBER NOT NULL,
    coupon_date DATE NOT NULL,
    game_id     NUMBER NOT NULL
)
LOGGING;

ALTER TABLE coupons ADD CONSTRAINT coupons_pk PRIMARY KEY ( coupon_id );

CREATE TABLE coupons_numbers (
    coupon_id NUMBER NOT NULL,
    coupon_no NUMBER NOT NULL
)
LOGGING;

ALTER TABLE coupons_numbers ADD CONSTRAINT coupons_numbers_un UNIQUE ( coupon_no,
                                                                       coupon_id );

CREATE TABLE games (
    game_id       NUMBER NOT NULL,
    game_name     VARCHAR2(40 CHAR) NOT NULL,
    coupon_price  NUMBER NOT NULL,
    amount_to_win NUMBER NOT NULL
)
LOGGING;

ALTER TABLE games ADD CONSTRAINT games_pk PRIMARY KEY ( game_id );

CREATE TABLE lucky_winners (
    winned_amount NUMBER NOT NULL,
    coupon_id     NUMBER NOT NULL
)
LOGGING;

ALTER TABLE lucky_winners ADD CONSTRAINT lucky_winners_coupon_id_un UNIQUE ( coupon_id );

CREATE TABLE results (
    game_id   NUMBER NOT NULL,
    draw_date DATE NOT NULL,
    draw_no   NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE results
    ADD CONSTRAINT results_un UNIQUE ( draw_no,
                                       draw_date,
                                       game_id );

CREATE TABLE rollovers (
    game_id           NUMBER NOT NULL,
    rollover_day      DATE NOT NULL,
    cumulative_amount NUMBER NOT NULL
)
LOGGING;

ALTER TABLE rollovers ADD CONSTRAINT rollovers_un UNIQUE ( rollover_day,
                                                           game_id );

CREATE TABLE rollovers_archive (
    game_id           NUMBER NOT NULL,
    rollover_day      DATE NOT NULL,
    cumulative_amount NUMBER NOT NULL
)
LOGGING;

ALTER TABLE coupons
    ADD CONSTRAINT coupons_games_fk FOREIGN KEY ( game_id )
        REFERENCES games ( game_id )
    NOT DEFERRABLE;

ALTER TABLE coupons_numbers
    ADD CONSTRAINT coupons_numbers_coupons_fk FOREIGN KEY ( coupon_id )
        REFERENCES coupons ( coupon_id )
    NOT DEFERRABLE;

ALTER TABLE lucky_winners
    ADD CONSTRAINT lucky_winners_coupons_fk FOREIGN KEY ( coupon_id )
        REFERENCES coupons ( coupon_id )
    NOT DEFERRABLE;

ALTER TABLE results
    ADD CONSTRAINT results_games_fk FOREIGN KEY ( game_id )
        REFERENCES games ( game_id )
    NOT DEFERRABLE;

ALTER TABLE rollovers_archive
    ADD CONSTRAINT rollovers_archive_games_fk FOREIGN KEY ( game_id )
        REFERENCES games ( game_id )
    NOT DEFERRABLE;

ALTER TABLE rollovers
    ADD CONSTRAINT rollovers_games_fk FOREIGN KEY ( game_id )
        REFERENCES games ( game_id )
    NOT DEFERRABLE;


Insert into GAMES (GAME_ID,GAME_NAME,COUPON_PRICE,AMOUNT_TO_WIN) values (10,'Big Lotto',	'2',	'300000');
Insert into GAMES (GAME_ID,GAME_NAME,COUPON_PRICE,AMOUNT_TO_WIN) values (20,'Express Lotto','1.5',	'500000');

INSERT INTO rollovers VALUES (10,	sysdate,    300000);
INSERT INTO rollovers VALUES (20,   sysdate,	500000);

COMMIT;

CREATE TABLE budget (
budget_id NUMBER,
budget_amount NUMBER(8,2) NOT NULL, 
CONSTRAINT BUDGET_AMOUNT_CK CHECK (budget_amount > 0 ),
CONSTRAINT BUDGET_PK PRIMARY KEY (budget_id),
CONSTRAINT BUDGET_PK_CK CHECK (budget_id = 1 )
);

INSERT INTO budget VALUES (1,50);

COMMIT;

CREATE OR REPLACE FUNCTION nth_winners_sum (p_var NUMBER, p_game_id NUMBER)
RETURN NUMBER 
IS
    v_winner_sum NUMBER;
BEGIN
-- GET NTH date winners amount summary 
    SELECT SUM(amount) amount_summary INTO v_winner_sum
    FROM  WINNERS_WITH_AMOUNT
    WHERE ((UPPER(game_name) = 'BIG LOTTO' AND correct_no < 6)
    OR (UPPER(game_name) = 'EXPRESS LOTTO' AND correct_no < 5))
    -- p_game_id to choose which game
    AND game_id = p_game_id
    AND TO_CHAR(draw_date,'yymmdd') = (SELECT draw_date
    FROM ( SELECT TO_CHAR(draw_date,'yymmdd') draw_date
    , DENSE_RANK() OVER (ORDER BY TO_CHAR(draw_date,'yymmdd') DESC) ds 
    FROM results
    WHERE game_id = p_game_id
    GROUP BY TO_CHAR(draw_date,'yymmdd'))
    WHERE ds = p_var)
    GROUP BY game_id, draw_date; 

    RETURN v_winner_sum ;

END;
/

CREATE OR REPLACE TRIGGER budget_tr
BEFORE INSERT ON coupons
FOR EACH ROW 
WHEN (
USER <> 'LOTTO' )
DECLARE
   v_price NUMBER;
BEGIN   
    SELECT coupon_price INTO v_price FROM games WHERE game_id = :NEW.game_id;
    UPDATE budget SET budget_amount = budget_amount - v_price;    
END;
/
-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             12
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          2
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
